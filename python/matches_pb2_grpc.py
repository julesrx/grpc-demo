# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import matches_pb2 as matches__pb2


class MatchesStub(object):
    """Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMatch = channel.unary_unary(
                '/Matches/CreateMatch',
                request_serializer=matches__pb2.CreateMatchRequest.SerializeToString,
                response_deserializer=matches__pb2.CreateMatchResponse.FromString,
                )
        self.UpdateMatch = channel.unary_unary(
                '/Matches/UpdateMatch',
                request_serializer=matches__pb2.UpdateMatchRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetMatchById = channel.unary_unary(
                '/Matches/GetMatchById',
                request_serializer=matches__pb2.GetMatchByIdRequest.SerializeToString,
                response_deserializer=matches__pb2.GetMatchByIdResponse.FromString,
                )
        self.GetMatchesByIds = channel.unary_unary(
                '/Matches/GetMatchesByIds',
                request_serializer=matches__pb2.GetMatchesByIdsRequest.SerializeToString,
                response_deserializer=matches__pb2.GetMatchesByIdsResponse.FromString,
                )


class MatchesServicer(object):
    """Service
    """

    def CreateMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMatchById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMatchesByIds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MatchesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMatch,
                    request_deserializer=matches__pb2.CreateMatchRequest.FromString,
                    response_serializer=matches__pb2.CreateMatchResponse.SerializeToString,
            ),
            'UpdateMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMatch,
                    request_deserializer=matches__pb2.UpdateMatchRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetMatchById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMatchById,
                    request_deserializer=matches__pb2.GetMatchByIdRequest.FromString,
                    response_serializer=matches__pb2.GetMatchByIdResponse.SerializeToString,
            ),
            'GetMatchesByIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMatchesByIds,
                    request_deserializer=matches__pb2.GetMatchesByIdsRequest.FromString,
                    response_serializer=matches__pb2.GetMatchesByIdsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Matches', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Matches(object):
    """Service
    """

    @staticmethod
    def CreateMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Matches/CreateMatch',
            matches__pb2.CreateMatchRequest.SerializeToString,
            matches__pb2.CreateMatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Matches/UpdateMatch',
            matches__pb2.UpdateMatchRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMatchById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Matches/GetMatchById',
            matches__pb2.GetMatchByIdRequest.SerializeToString,
            matches__pb2.GetMatchByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMatchesByIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Matches/GetMatchesByIds',
            matches__pb2.GetMatchesByIdsRequest.SerializeToString,
            matches__pb2.GetMatchesByIdsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
